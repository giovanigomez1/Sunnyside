{"mappings":"ACAA,MAAM,EAAc,SAAS,gBAAgB,CAAC,YASxC,EAAkB,IAAI,qBAPR,SAAS,CAAO,CAAE,CAAQ,EAC5C,GAAM,CAAC,EAAM,CAAG,CACZ,CAAA,EAAM,cAAc,GACxB,EAAM,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,mBAC9B,EAAS,SAAS,CAAC,EAAM,MAAM,EACjC,EAE8D,CAC5D,KAAM,KACN,UAAW,GACb,GAEA,EAAY,OAAO,CAAC,SAAS,CAAO,EAClC,EAAgB,OAAO,CAAC,GACxB,EAAQ,SAAS,CAAC,GAAG,CAAC,kBACxB","sources":["<anon>","js/index.js"],"sourcesContent":["const allSections = document.querySelectorAll(\".section\");\nconst showSectoin = function(entries, observer) {\n    const [entry] = entries;\n    if (!entry.isIntersecting) return;\n    entry.target.classList.remove(\"section--hidden\");\n    observer.unobserve(entry.target);\n};\nconst sectionObserver = new IntersectionObserver(showSectoin, {\n    root: null,\n    threshold: 0.07\n});\nallSections.forEach(function(section) {\n    sectionObserver.observe(section);\n    section.classList.add(\"section--hidden\");\n});\n\n//# sourceMappingURL=index.26111bd0.js.map\n","const allSections = document.querySelectorAll('.section')\n\nconst showSectoin = function(entries, observer) {\n  const [entry] = entries\n  if(!entry.isIntersecting) return\n  entry.target.classList.remove('section--hidden')\n  observer.unobserve(entry.target)\n}\n\nconst sectionObserver = new IntersectionObserver(showSectoin, {\n  root: null,\n  threshold: 0.07\n})\n\nallSections.forEach(function(section) {\n  sectionObserver.observe(section)\n  section.classList.add('section--hidden')\n})\n\n"],"names":["allSections","document","querySelectorAll","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","target","classList","remove","unobserve","root","threshold","forEach","section","observe","add"],"version":3,"file":"index.26111bd0.js.map"}